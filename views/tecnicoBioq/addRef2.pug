html
    head 
      link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css")
      link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous")
      script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" 
             integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" 
             crossorigin="anonymous")
      title Alfgo 
    body
      - var id1=''
      - var id2=''
      - var id3=''
      if modal
          include ../modal.pug
      .container
        include navBar.pug
      .container 
        .row 
          .div.col 
            h1 Valores de referencia
        .row  
          .col.mt-4
            form( action=`/vistaTecBioq/addValorRef2`,method="POST", name="formDeterminacion" )
                    .row
                       input(type="hidden" name="determinacionId" id="determinacionId")
                    .row
                        .container.mt-4
                              .col-lg-4.col-md-6.col-sm-12
                                div#listaDets
                                  ul
                                label(for="determinacion", class="form-label") Determinaciones existentes:
                                input#determinacion.form-control(list="datalistOptions", name="determinacion", placeholder=arrDet && arrDet.length===0?"No hay determiniaciones":"Type to search...",disabled= arrDet && arrDet.length === 0)
                                datalist(id="datalistOptions")
                                  each det in arrDet
                                     option(id=det.id)= det.nombre 
                                if errors
                                 - e=errors.find(e=>e.path==='determinacionId') 
                                 if e 
                                   p(class="text-danger")= e.msg       
                    .row 
                        #acordeon.accordion.mt-5
                            .accordion-item
                                h2(class="accordion-header")
                                    button(class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target=`#panelsStayOpen-collapse0` aria-expanded="true" aria-controls=`panelsStayOpen-collapse0`) Hombre
                                div(id=`panelsStayOpen-collapse0` class="accordion-collapse collapse show")
                                 .accordion-body
                                    table
                                          thead
                                            tr
                                              th Edad Min
                                              th Edad Max
                                              th Valor Min
                                              th Valor Max
                                          tbody(id="hombreBody")
                                            - if(obj)
                                              - let tr=0
                                              each h in obj.hombre
                                                tr(id=`hombreBodytr-${tr}`)
                                                  - let k=0
                                                  each j in h 
                                                   td
                                                    - const name= k ===0?'hombreBodyedadMin':k===1?'hombreBodyedadMax':k===2?'hombreBodyvalorMinimo':'hombreBodyvalorMaximo'
                                                    - k++
                                                    input(class="form-control" type="number" required name=name value=j id=id1)
                                                  td
                                                    button(id=`btn-hombreBody-${tr}` type="button" class="btn btn-close danger btn-sm")  
                                                - tr++
                                                - id1=tr    
                                    button(type="button" class="btn btn-success btn-sm" id="btnHombre")
                                          i(class="bi bi-plus")
                                    
                                    - if(obj && obj.errorhombre0)
                                      p(class="text-danger") Rangos incorrectos.
                                    - if(obj && obj.errorhombreNaN)
                                      p(class="text-danger") Campos incompletos.             
                            .accordion-item
                                h2(class="accordion-header")
                                    button(class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target=`#panelsStayOpen-collapse1` aria-expanded="true" aria-controls=`panelsStayOpen-collapse1`) Mujer
                                div(id=`panelsStayOpen-collapse1` class="accordion-collapse collapse show")
                                 .accordion-body
                                    table
                                     thead
                                       tr
                                         th Edad Min
                                         th Edad Max
                                         th Valor Min
                                         th Valor Max
                                     tbody(id="mujerBody")
                                            - if(obj)
                                              - let tr=0
                                              each h in obj.mujer
                                                tr(id=`mujerBodytr-${tr}`)
                                                  - let k=0
                                                  each j in h 
                                                   td
                                                    - const name= k ===0?'mujerBodyedadMin':k===1?'mujerBodyedadMax':k===2?'mujerBodyvalorMinimo':'mujerBodyvalorMaximo'
                                                    - id2 = k===0 ? `filamujerBody-${tr}`:''
                                                    - k++
                                                    input(class="form-control" type="number" required name=name value=j id=id2)
                                                  td
                                                    button(id=`btn-mujerBody-${tr}` type="button" class="btn btn-close danger btn-sm")  
                                                - tr++
                                                - id2=tr   
                                    button(type="button" class="btn btn-success btn-sm" id="btnMujer")
                                          i(class="bi bi-plus")
                                    
                                    - if(obj && obj.errormujer0)
                                      p(class="text-danger") Rangos incorrectos.
                                    - if(obj && obj.errormujerNaN)
                                      p(class="text-danger") Campos incompletos.                    
                            .accordion-item
                                h2(class="accordion-header")
                                    button(class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target=`#panelsStayOpen-collapse2` aria-expanded="true" aria-controls=`panelsStayOpen-collapse2`) Mujer Embarazada
                                div(id=`panelsStayOpen-collapse2` class="accordion-collapse collapse show")
                                 .accordion-body
                                    table
                                          thead
                                            tr
                                              th Edad Min
                                              th Edad Max
                                              th Valor Min
                                              th Valor Max
                                          tbody(id="embarazadaBody")
                                            - if(obj)
                                              - let tr=0
                                              each h in obj.embarazada
                                                tr(id=`embarazadaBodytr-${tr}`)
                                                  - let k=0
                                                  each j in h 
                                                   td
                                                    - const name= k ===0?'embarazadaBodyedadMin':k===1?'embarazadaBodyedadMax':k===2?'embarazadaBodyvalorMinimo':'embarazadaBodyvalorMaximo'
                                                    - id3= k===0 ? `filaembarazadaBody-${tr}`:''
                                                    - k++
                                                    - if (k===4)
                                                    input(class="form-control" type="number" required name=name value=j id=id3 )
                                                  td
                                                    button(id=`btn-embarazadaBody-${tr}` type="button" class="btn btn-close danger btn-sm" onclick="eliminarFila('embarazadaBody')")  
                                                - tr++
                                                - id3=tr    
                                    button(type="button" class="btn btn-success btn-sm" id="btnEmbarazada")
                                          i(class="bi bi-plus")
                                    
                                    - if(obj && obj.errorembarazada0)
                                      p(class="text-danger") Rangos incorrectos.
                                    - if(obj && obj.errorembarazadaNaN)
                                      p(class="text-danger") Campos incompletos.                                    

                    .row
                        .col-lg-1.col-md-2.col-sm-2    
                              button.btn.btn-primary(type="submit") Enviar                
                       
      script.  
          let arr=[parseInt('#{id1}'),parseInt( '#{id2}'),parseInt('#{id3}')]
            let detId=document.getElementById("determinacionId")
             const listaDets = document.getElementById('listaDets').querySelector('ul');
         const inputDet = document.getElementById('determinacion');
         const datalistOptions = document.getElementById('datalistOptions').querySelectorAll('option');      
             inputDet.addEventListener('input', () => {
                                   const enteredValue = inputDet.value;
                                   const options = Array.from(datalistOptions).map(option => option.value);
                                   if (options.length===0 || !options.includes(enteredValue)) {
                                       inputDet.setCustomValidity('No ha seleccionado una determinación');
                                   } else {
                                     inputDet.setCustomValidity('');
                                   }
                                  let selectedId = null;
                                   const selectedOption = Array.from(datalistOptions).find(option => option.value === inputDet.value);
                                         if (selectedOption) {
                                           selectedId = selectedOption.getAttribute('id');
                                           detId.value=selectedId
                                         } else {
                                           selectedId = null;
                                         }

               });

          const eliminarFila=(id)=>{ return e=>{
                                 const [,,b]=e.target.id.split("-")
                                  const fila = document.getElementById(`${id}tr-${b}`);
                                       if (fila) {
                                            fila.remove();
                                        }
                                }                             
                    }
                    //  let arr=[parseInt('#{id1}'),parseInt( '#{id2}'),parseInt('#{id3}')]
            let arr2=['hombreBody','mujerBody','embarazadaBody']
           
            let j=0;
            for(let elem of arr){
                  if(!isNaN(elem)){              
                       for(let i=0;i<elem;i++){
                       const btn=document.getElementById(`btn-${arr2[j]}-${i}`);
                       btn.addEventListener('click',eliminarFila(`${arr2[j]}`))
                      }
                    }   j++              
            }
                  
          const addFila=(id)=>{  
            let ultimaFila=0
            const tbody = document.getElementById(`${id}`);
            const ultimoTr = tbody.lastElementChild;
            if(ultimoTr){
            const[,b]=ultimoTr.id.split("-")
              let ultimaFila=parseInt(b)+1}
              return(e)=>{

                  const tr=document.createElement('tr')
                  tr.id=`${id}tr-${ultimaFila}`
                  document.getElementById(id).appendChild(tr)

                  const eliminarBtn=document.createElement('button')
                  eliminarBtn.id=`btn-${id}-${ultimaFila}`
                 eliminarBtn.type="button"
                 eliminarBtn.classList.add("btn", "btn-close" ,"danger", "btn-sm")
                 eliminarBtn.addEventListener('click',eliminarFila(id));

                  for(let i=0;i<4;i++){
                      const td=document.createElement('td');
                      let input=document.createElement('input')
                      input.classList.add('form-control')
                      input.setAttribute('type','number')
                      switch(i){
                          case 0:  input.setAttribute('name',`${id}edadMin`)
                                   input.id=`fila${id}${ultimaFila}`
                                   break;
                          case 1:  input.setAttribute('name',`${id}edadMax`)
                                   break;
                          case 2:  input.setAttribute('name',`${id}valorMinimo`)
                                   break;
                          case 3:  input.setAttribute('name',`${id}valorMaximo`)
                                   break;
                      }                              
                      td.appendChild(input);
                      input= document.getElementById(`fila${id}${ultimaFila}`)
                      if(input)input.focus()
                      tr.appendChild(td)

                  }
                        const td=document.createElement('td');
                        td.appendChild(eliminarBtn);
                        tr.appendChild(td)

                  ultimaFila++;
               }
              }
              document.getElementById('btnHombre').addEventListener('click',addFila('hombreBody'))
              document.getElementById('btnMujer').addEventListener('click',addFila('mujerBody'))
              document.getElementById('btnEmbarazada').addEventListener('click',addFila('embarazadaBody'))